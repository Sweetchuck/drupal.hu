version: 2.1

executors:
  php703:
    environment:
      COMPOSER_NO_INTERACTION: '1'
      COMPOSER_MEMORY_LIMIT: '-1'
      BASH_ENV: '/root/.bashrc'
    docker:
      -
        image: 'sweetchuck/php-env-dev:703-12.x.x'
        entrypoint: ['/bin/bash']

commands:
  php_cli_enable_xdebug:
    description: 'PHP CLI - enable xdebug'
    steps:
      -
        run:
          name: 'PHP CLI - enable xdebug'
          command: |
            iniFileName=$( \
              php -i \
              |
              grep \
                --color=never \
                --only-matching \
                --perl-regexp '(?<=Loaded Configuration File => ).+'\
            )
            sed \
              --in-place \
              --regexp-extended \
              --expression 's/^zend_extension(.+)\/xdebug(\.so){0,1}$/;\0/g' \
              "${iniFileName}"

  php_cli_disable_xdebug:
    description: 'PHP CLI - disable xdebug'
    steps:
      -
        run:
          name: 'PHP CLI - disable xdebug'
          command: |
            iniFileName=$( \
              php -i \
              |
              grep \
                --color=never \
                --only-matching \
                --perl-regexp '(?<=Loaded Configuration File => ).+'\
            )
            sed \
              --in-place \
              --regexp-extended \
              --expression 's/^(;|#)( |\t){0,}(zend_extension(.+)\/xdebug(\.so){0,1})$/\3/g' \
              "${iniFileName}"

  composer_install:
    description: 'Install Composer dependencies with cache restore and save'
    steps:
      -
        restore_cache:
          name: 'Composer - cache restore'
          keys:
            - 'composer-{{ checksum "composer.lock" }}'

      -
        run:
          name: 'Composer - install'
          command: >
            [[ -d 'vendor' ]] || composer install --no-progress

      -
        save_cache:
          name: 'Composer - cache save'
          key: 'composer-{{ checksum "composer.lock" }}'
          paths:
            - './bin/'
            - './docroot/core/'
            - './docroot/modules/contrib/'
            - './docroot/themes/contrib/'
            - './docroot/themes/custom/appf/bootstrap/'
            - './docroot/profiles/contrib/'
            - './docroot/libraries/contrib/'
            - './vendor/'

  collect_asset_sources_to_checksum:
    description: ''
    steps:
      -
        run:
          name: ''
          command: |
            fileName=checksum-of-frontend-asset-sources.sha256
            touch "${fileName}"
            find ./docroot/themes/custom/appf/scss/ -type f -name '*.scss' -exec sha256sum {} \; >> "${fileName}"
            sha256sum ./docroot/themes/custom/appf/yarn.lock >> "${fileName}"

  build:
    description: 'Build'
    steps:
      -
        restore_cache:
          name: 'NPM - cache restore'
          keys:
            - 'npm-{{ checksum "checksum-of-frontend-asset-sources.sha256" }}'
      -
        run:
          name: 'drush marvin:build'
          command: >
            bin/drush --config=drush @app.local marvin:build

      -
        save_cache:
          name: 'NPM - cache save'
          key: 'npm-{{ checksum "checksum-of-frontend-asset-sources.sha256" }}'
          paths:
            - './docroot/themes/custom/appf/node_modules/'


  lint:
    description: 'Run linters'
    steps:
      -
        run:
          name: 'Run linters'
          command: >
            bin/drush --config=drush @app.local marvin:lint

  test_unit:
    description: 'Run unit tests'
    steps:
      -
        run:
          name: 'Run unit tests'
          command: >
            bin/drush --config=drush @app.local marvin:test:unit
      -
        store_test_results:
          name: 'Store unit test results'
          path: 'reports/machine/junit'
      -
        run:
          name: 'Publish the code coverage report on Codecov.io'
          when: 'always'
          command: >
            [ ! -s reports/machine/coverage/*/coverage.xml ]
            || bash <(curl -s https://codecov.io/bash)
            || true

jobs:
  php703__lint_and_test:
    executor: 'php703'
    working_directory: '~/repo'
    steps:
      - 'checkout'
      - 'php_cli_disable_xdebug'
      - 'composer_install'
      - 'build'
      - 'lint'
      - 'php_cli_enable_xdebug'
      - 'test_unit'
      - 'php_cli_disable_xdebug'

workflows:
  php703__lint_and_test:
    jobs:
      -
        php703__lint_and_test: {}
